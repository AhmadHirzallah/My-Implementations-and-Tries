!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ahirzall/01_Programming_MOC/00_My-Implementations-and-Tries/GetNextLineTries/0_MyFirstTry/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
BUFFER_SIZE	get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	get_next_line_bonus.h	/^#  define BUFFER_SIZE /;"	d
GET_NEXT_LINE_BONUS_H	get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
GET_NEXT_LINE_H	get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
add_into_lnked_lst	get_next_line_utils.c	/^static void	add_into_lnked_lst(t_linked_lst **lnked_lst, char *filled_bfr)$/;"	f	typeref:typename:void	file:
begin_lines_into_lnked_lst	get_next_line_utils.c	/^void	begin_lines_into_lnked_lst(t_linked_lst **lnked_lst, int fd)$/;"	f	typeref:typename:void
calc_len_till_newline	get_next_line.c	/^static size_t	calc_len_till_newline(t_linked_lst *lst_node)$/;"	f	typeref:typename:size_t	file:
concat_strs_into_line	get_next_line_utils.c	/^void	concat_strs_into_line(t_linked_lst *lst_node, char *line_str)$/;"	f	typeref:typename:void
destroy_linked_list	get_next_line_utils.c	/^void	destroy_linked_list(t_linked_lst **lnked_lst,$/;"	f	typeref:typename:void
find__get_last_node	get_next_line.c	/^t_linked_lst	*find__get_last_node(t_linked_lst *lnkd_lst)$/;"	f	typeref:typename:t_linked_lst *
get_next_line	get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_one_line	get_next_line.c	/^static char	*get_one_line(t_linked_lst *lst_node)$/;"	f	typeref:typename:char *	file:
is_newline	get_next_line_utils.c	/^static bool	is_newline(t_linked_lst *list_node)$/;"	f	typeref:typename:bool	file:
next_node	get_next_line.h	/^	struct s_linked_lst	*next_node;$/;"	m	struct:s_linked_lst	typeref:struct:s_linked_lst *
prepare_lnkd_lst_for_next	get_next_line.c	/^static void	prepare_lnkd_lst_for_next(t_linked_lst **lnked_lst)$/;"	f	typeref:typename:void	file:
s_linked_lst	get_next_line.h	/^typedef struct s_linked_lst$/;"	s
str_buf_content	get_next_line.h	/^	char				*str_buf_content;$/;"	m	struct:s_linked_lst	typeref:typename:char *
t_linked_lst	get_next_line.h	/^}						t_linked_lst;$/;"	t	typeref:struct:s_linked_lst
